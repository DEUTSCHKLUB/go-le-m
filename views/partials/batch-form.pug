form#batch-form(name="batch-form", method="post", action="/create/")
  .row.align-items-stretch
    #batch-info-wrap.col-12
        .form-row
            .form-group.col-12
                label.section-label(for='batch-file-name')
                    svg.bi(width='22' height='22' fill='currentColor')
                        use(xlink:href='/icons.svg#file-earmark-font')
                    |File Name
                input#batch-file-name.form-control(name='batchFileName' placeholder='File Name for Batch' type='text' aria-describedby='batch-file-nameHelpBlock' required='required')
                span#batch-file-nameHelpBlock.form-text.text-muted Enter the name applied to each file in this batch
            .form-group.col-12
                label.section-label(for='batch-image-select')
                    svg.bi(width='22' height='22' fill='currentColor')
                        use(xlink:href='/icons.svg#images')
                    |Pick Images For This batch
                select#batch-image-select.custom-select(multiple='multiple' name='batchImageSelect' aria-describedby='batch-image-selectHelpBlock' required='required')
                    option(value='') Upload images first and they'll be ready for editing here.
                span#batch-image-selectHelpBlock.form-text.text-muted Select all the images you want in this batch. (Hold CMD or CTRL and click to select multiple images)
    #transforms-col.col-12
        .form-row
            .form-group.col-12.col-md-6
                label.section-label
                    svg.bi(width='22' height='22' fill='currentColor')
                        use(xlink:href='/icons.svg#arrow-repeat')
                    | Rotate Images
                div.form-row
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-rotate_0.custom-control-input(name='rotate' type='radio' value='90' aria-describedby='batch-rotateHelpBlock')
                        label.custom-control-label(for='batch-rotate_0') 90&ring;
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-rotate_1.custom-control-input(name='rotate' type='radio' value='180' aria-describedby='batch-rotateHelpBlock')
                        label.custom-control-label(for='batch-rotate_1') 180&ring;
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-rotate_2.custom-control-input(name='rotate' type='radio' value='270' aria-describedby='batch-rotateHelpBlock')
                        label.custom-control-label(for='batch-rotate_2') 270&ring;
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-rotate_3.custom-control-input(name='rotate' type='radio' value='' aria-describedby='batch-rotateHelpBlock' checked)
                        label.custom-control-label(for='batch-rotate_3') None
                    span#batch-rotateHelpBlock.form-text.text-muted Rotate all images in this batch by degrees
            .form-group.col-12.col-md-6
                label.section-label
                    svg.bi(width='22' height='22' fill='currentColor')
                        use(xlink:href='/icons.svg#arrow-down-up')
                    | Flip Images
                div.form-row
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-flip_0.custom-control-input(name='flip' type='radio' value='horizontal' aria-describedby='batch-flipHelpBlock')
                        label.custom-control-label(for='batch-flip_0') Horizontal
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-flip_1.custom-control-input(name='flip' type='radio' value='vertical' aria-describedby='batch-flipHelpBlock')
                        label.custom-control-label(for='batch-flip_1') Vertical
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-flip_2.custom-control-input(name='flip' type='radio' value='' aria-describedby='batch-flipHelpBlock' checked)
                        label.custom-control-label(for='batch-flip_2') None
                    span#batch-flipHelpBlock.form-text.text-muted Flip all images in this batch by direction
            .form-group.col-12.col-md-6
                div
                    label.section-label(for='batch-resize')
                        svg.bi(width='22' height='22' fill='currentColor')
                            use(xlink:href='/icons.svg#arrows-angle-expand')
                        | Resize Images
                    input#batch-resize.form-control(name='resize' placeholder='Maximum resize dimensions' type='text' aria-describedby='batch-resizeHelpBlock')
                    span#batch-resizeHelpBlock.form-text.text-muted Set the maximum dimension for the images in this batch (value will be in pixels).
            .form-group.col-12.col-md-6
                label.section-label(for='batch-scale-images')
                    svg.bi(width='22' height='22' fill='currentColor')
                        use(xlink:href='/icons.svg#aspect-ratio')
                    | Scale Images
                input#batch-scale-images.form-control.custom-range(type='range' name='scale' min='50' max='150' value='100' step='5' aria-describedby='batch-scale-imagesHelpBlock')
                .range-values
                    span.range-value.min
                        |50%
                    span.range-value
                        |100%
                    span.range-value.max
                        |150%
                span#batch-scale-imagesHelpBlock.form-text.text-muted Scale Images from 50% to 150% max
            .form-group.col-12.col-md-6
                label.section-label
                    svg.bi(width='22' height='22' fill='currentColor')
                        use(xlink:href='/icons.svg#sliders')
                    | Color Corrections
                div.form-row
                    .custom-control.custom-checkbox.custom-control-inline
                        input#batch-correct-colors_0.custom-control-input(name='colorCorrections' type='checkbox' value='-equalize' aria-describedby='batch-correct-colorsHelpBlock')
                        label.custom-control-label(for='batch-correct-colors_0') Equalize
                    .custom-control.custom-checkbox.custom-control-inline
                        input#batch-correct-colors_1.custom-control-input(name='colorCorrections' type='checkbox' value='+channel -normalize' aria-describedby='batch-correct-colorsHelpBlock')
                        label.custom-control-label(for='batch-correct-colors_1') Normalize
                    span#batch-correct-colorsHelpBlock.form-text.text-muted Choose any color correction you&apos;d like to perform on the batch.
            .form-group.col-12.col-md-6
                label.section-label
                    svg.bi(width='22' height='22' fill='currentColor')
                        use(xlink:href='/icons.svg#exclude')
                    | Colorize Images
                div.form-row
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-colorize-images_0.custom-control-input(name='colorize' type='radio' value='-threshold 35%' aria-describedby='batch-colorize-imagesHelpBlock')
                        label.custom-control-label(for='batch-colorize-images_0') B/W
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-colorize-images_1.custom-control-input(name='colorize' type='radio' value='-colorspace Gray' aria-describedby='batch-colorize-imagesHelpBlock')
                        label.custom-control-label(for='batch-colorize-images_1') Greyscale
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-colorize-images_2.custom-control-input(name='colorize' type='radio' value='-sepia-tone 65%' aria-describedby='batch-colorize-imagesHelpBlock')
                        label.custom-control-label(for='batch-colorize-images_2') Sepia
                    .custom-control.custom-radio.custom-control-inline
                        input#batch-colorize-images_3.custom-control-input(name='colorize' type='radio' value='' aria-describedby='batch-colorize-imagesHelpBlock' checked)
                        label.custom-control-label(for='batch-colorize-images_3') None
                    span#batch-colorize-imagesHelpBlock.form-text.text-muted Choose an colorization option for the batch
        .col-12.px-0.mb-2
            button.btn(name='submit' type='submit') Order Batch

script.
    ;(function(w,d){

        let form = document.querySelector('#batch-form');

        function makeBatch(event){
            event.preventDefault();
            const form = event.currentTarget;

            let url = form.action;

            try {
                let formData = new FormData(form);

                url = url + formData.get('batchId');

                //- I have to collect all the selected values before passing it
                
                imageSelectOptions = Array(...form['batchImageSelect'].options).reduce((acc, option) => {
                    if (option.selected === true) {
                        acc.push(option.value);
                    }
                    return acc;
                }, []);
                formData.set('batchImageSelect', imageSelectOptions);

                imageTransforms = Array(...form['colorCorrections']).reduce((acc, option) => {
                    if (option.checked === true) {
                        acc.push(option.value);
                    }
                    return acc;
                }, []);
                formData.set('colorCorrections', imageTransforms);

                let plainFormData = Object.fromEntries(formData.entries()),
                    formDataJsonString = JSON.stringify(plainFormData),
                    fetchOptions = {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            Accept: "application/json",
                        },
                        body: formDataJsonString,
                    };

                fetch(url, fetchOptions).then(res => {
                    return res.json();
                }).then( data => {
                    console.log("Form!: ", data);
                }).catch(function(e) {
                    console.log('Error', e);
                });

            } catch (error) {
                console.error(error);
            }

        };

        form.addEventListener('submit', makeBatch);

    })(window,document)